{
  "name": "promptrocket",
  "publisher": "dncc89",
  "displayName": "PromptRocket",
  "description": "Run your own AI prompts in VSCode",
  "version": "0.1.0",
  "icon": "public/icon.png",
  "engines": {
    "vscode": "^1.78.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "promptrocket.openMessageShortcut",
        "title": "PromptRocket: Open Message Shortcut",
        "icon": "$(beaker)"
      },
      {
        "command": "promptrocket.openChatTemplate",
        "title": "PromptRocket: Open Chat Template",
        "icon": "$(github-action)"
      },
      {
        "command": "promptrocket.sendMessage",
        "title": "PromptRocket: Send a Message to Chat"
      },
      {
        "command": "promptrocket.insertLastCodeblock",
        "title": "PromptRocket: Insert Last Codeblock to Editor"
      },
      {
        "command": "promptrocket.newChat",
        "title": "PromptRocket: New Chat",
        "icon": "$(add)"
      },
      {
        "command": "promptrocket.openSettings",
        "title": "PromptRocket: Open Settings",
        "icon": "$(gear)"
      },
      {
        "command": "promptrocket.setkey",
        "title": "PromptRocket: Set API Key"
      }
    ],
    "keybindings": [
      {
        "command": "promptrocket.sendMessage",
        "key": "ctrl+shift+'",
        "mac": "cmd+shift+'"
      },
      {
        "command": "promptrocket.openMessageShortcut",
        "key": "ctrl+shift+;",
        "mac": "cmd+shift+;"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "promptrocket-container",
          "title": "PromptRocket",
          "icon": "$(rocket)"
        }
      ]
    },
    "views": {
      "promptrocket-container": [
        {
          "type": "webview",
          "id": "promptrocket.view",
          "name": "Chat"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "promptrocket.openSettings",
          "when": "view == promptrocket.view",
          "group": "navigation@3"
        },
        {
          "command": "promptrocket.openChatTemplate",
          "when": "view == promptrocket.view",
          "group": "navigation@1"
        },
        {
          "command": "promptrocket.openMessageShortcut",
          "when": "view == promptrocket.view",
          "group": "navigation@2"
        },
        {
          "command": "promptrocket.newChat",
          "when": "view == promptrocket.view",
          "group": "navigation@0"
        }
      ]
    },
    "configuration": {
      "title": "promptrocket",
      "properties": {
        "promptrocket.userName": {
          "type": "string",
          "default": "User",
          "description": "Username in the chat."
        },
        "promptrocket.assistantName": {
          "type": "string",
          "default": "PromptRocket",
          "description": "AI's name in the chat."
        },
        "promptrocket.model": {
          "type": "string",
          "default": "GPT-3.5-turbo-0613",
          "description": "Select model",
          "enum": [
            "GPT-3.5-turbo-0613",
            "GPT-3.5-turbo-16k-0613",
            "GPT-4-0613"
          ]
        },
        "promptrocket.temperatrue": {
          "type": "number",
          "default": 0,
          "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic."
        },
        "promptrocket.top_p": {
          "type": "number",
          "default": 1,
          "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered."
        },
        "promptrocket.presence_penalty": {
          "type": "number",
          "default": -2,
          "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics."
        },
        "promptrocket.frequency_penalty": {
          "type": "number",
          "default": -2,
          "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim."
        },
        "promptrocket.contextLength": {
          "type": "number",
          "default": 5,
          "description": "Lines of context before and after the cursor to send to the AI"
        },
        "promptrocket.defaultSystemMessage": {
          "type": "string",
          "default": "You are the most powerful and advanced AI powered code editor called PromptRocket, who is expert in various languages and algorithms. You perform an action directly to the editor upon request with provided functions. Think first where user wants you to respond. Try to answer short, clear and consise.",
          "description": "Default system message"
        },
        "promptrocket.messageShortcuts": {
          "type": "array",
          "default": [
            {
              "name": "1. Insert a comment",
              "argument": false,
              "prompt": "Analyze code below cursor and insert a comment in the editor"
            },
            {
              "name": "2. Find an error and suggest a solution",
              "argument": false,
              "prompt": "Find an error around the cursor and suggest a solution"
            },
            {
              "name": "3. Autocomplete the code",
              "argument": false,
              "prompt": "Read the context around the cursor and autocmplete the code, prompt before inserting int o editor."
            },
            {
              "name": "4. Code snippet",
              "argument": true,
              "prompt": "Write a code snippet for this:"
            }
          ]
        },
        "promptrocket.chatTemplates": {
          "type": "array",
          "default": [
            {
              "name": "1. Identify Issues",
              "argument": false,
              "prompts": [
                {
                  "role": "system",
                  "content": "You are a powerful AI programming assistant well-versed in debugging code across various programming languages. Identify issues with the provided code and offer solutions."
                },
                {
                  "role": "user",
                  "content": "Here's my code written in {{language}}:\\n```{{context_before}}{{selected_text}}{{context_after}}```"
                },
                {
                  "role": "user",
                  "content": "Please identify any issues with this code and suggest how to fix them."
                }
              ],
              "description": "Message shortcut templates"
            },
            {
              "name": "2. Refactor Code",
              "argument": true,
              "prompts": [
                {
                  "role": "system",
                  "content": "You are the most powerful programming assistant in the world, who is expert in all programming languages and algorithms. Perform the requested task, then only return the required text."
                },
                {
                  "role": "user",
                  "content": "The language we're using is {{language}}."
                },
                {
                  "role": "user",
                  "content": "This is the context above the selected text:\\n```{{context_before}}```"
                },
                {
                  "role": "user",
                  "content": "This is the context below the selected text:\\n```{{context_after}}```"
                },
                {
                  "role": "user",
                  "content": "This is the selected text between the context:\\n ```{{selected_text}}```"
                },
                {
                  "role": "user",
                  "content": "Requested task: ```{{argument}}```"
                }
              ]
            },
            {
              "name": "3. Autocomplete Code",
              "argument": false,
              "prompts": [
                {
                  "role": "system",
                  "content": "You are the most powerful programming assistant in the world, who is expert in all programming languages and algorithms. Perform the requested task, then only return the required text."
                },
                {
                  "role": "user",
                  "content": "We're using {{language}}."
                },
                {
                  "role": "user",
                  "content": "This is the context above the cursor:\\n```{{context_before}}```"
                },
                {
                  "role": "user",
                  "content": "This is the context below the cursor:\\n```{{context_after}}```"
                },
                {
                  "role": "user",
                  "content": "Please complete the code between the context."
                }
              ]
            },
            {
              "name": "4. Explain Code",
              "argument": false,
              "prompts": [
                {
                  "role": "system",
                  "content": "You are the most powerful programming assistant in the world, who is expert in all programming languages and algorithms. Perform the requested task, then only return the required text."
                },
                {
                  "role": "user",
                  "content": "We're using {{language}}."
                },
                {
                  "role": "user",
                  "content": "This is the context above the cursor:\\n```{{context_before}}```"
                },
                {
                  "role": "user",
                  "content": "This is the context below the cursor:\\n```{{context_after}}```"
                },
                {
                  "role": "user",
                  "content": "Please analyze and explain this code."
                }
              ]
            }
          ],
          "description": "Array of command templates"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/jsonlint": "^1.6.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^16.18.34",
    "@types/node-fetch": "^2.6.4",
    "@types/vscode": "^1.78.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.39.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.2",
    "typescript": "^5.0.4",
    "webpack": "^5.81.0",
    "webpack-cli": "^5.0.2"
  },
  "dependencies": {
    "@vscode/codicons": "^0.0.33",
    "cross-fetch": "^3.1.6",
    "data-uri-to-buffer": "^5.0.1",
    "gitignore-parser": "^0.0.2",
    "jsonlint": "^1.6.3",
    "node-fetch": "^2.6.11",
    "openai": "^3.3.0",
    "stream": "^0.0.2"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/dncc89/promptrocket.git"
  }
}